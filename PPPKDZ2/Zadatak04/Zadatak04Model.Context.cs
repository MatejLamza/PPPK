//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Zadatak04
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PPPKDZ2MatejLamzaEntities : DbContext
    {
        public PPPKDZ2MatejLamzaEntities()
            : base("name=PPPKDZ2MatejLamzaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Student> Students { get; set; }
    
        public virtual int DeleteStudent(Nullable<int> iDstudent)
        {
            var iDstudentParameter = iDstudent.HasValue ?
                new ObjectParameter("IDstudent", iDstudent) :
                new ObjectParameter("IDstudent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteStudent", iDstudentParameter);
        }
    
        public virtual ObjectResult<GetAllStudents_Result> GetAllStudents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllStudents_Result>("GetAllStudents");
        }
    
        public virtual int InsertStudent(string ime, string prezime, string jMBAG, string email)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var jMBAGParameter = jMBAG != null ?
                new ObjectParameter("JMBAG", jMBAG) :
                new ObjectParameter("JMBAG", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertStudent", imeParameter, prezimeParameter, jMBAGParameter, emailParameter);
        }
    
        public virtual ObjectResult<SelectStudent_Result> SelectStudent(Nullable<int> iDStudent)
        {
            var iDStudentParameter = iDStudent.HasValue ?
                new ObjectParameter("IDStudent", iDStudent) :
                new ObjectParameter("IDStudent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectStudent_Result>("SelectStudent", iDStudentParameter);
        }
    
        public virtual int UpdateStudent(Nullable<int> iDStudent, string ime, string prezime, string jMBAG, string email)
        {
            var iDStudentParameter = iDStudent.HasValue ?
                new ObjectParameter("IDStudent", iDStudent) :
                new ObjectParameter("IDStudent", typeof(int));
    
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var jMBAGParameter = jMBAG != null ?
                new ObjectParameter("JMBAG", jMBAG) :
                new ObjectParameter("JMBAG", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStudent", iDStudentParameter, imeParameter, prezimeParameter, jMBAGParameter, emailParameter);
        }
    }
}
